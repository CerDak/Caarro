@page "/refueling/{CarId:int}"
@using Caarro.Data
@using Caarro.Services
@using Microsoft.Extensions.Logging
@inject NavigationManager _NavigationManager
@inject RefuelingService _RefuelingService
@inject ILogger<Refueling> _Log

<PageTitle>Caarro - Refueling</PageTitle>

<MudContainer>
    <MudDataGrid Items="@_refueling" Filterable="false" SortMode="SortMode.None" Groupable="false">
        <Columns>
            <PropertyColumn Property="x => x.Date"/>
            <PropertyColumn Property="x => x.Odometer"/>
            <PropertyColumn Property="x => x.Price"/>
            <TemplateColumn>
                <CellTemplate>
                    <MudStack Row>
                        <MudButton Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary"
                                   OnClick="() => GotoRefuelingDetails(context.Item.Id)">
                            Details
                        </MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" OnClick="NewRefueling">New Refueling</MudButton>
</MudContainer>

@code {
    [Parameter]
    public int CarId { get; set; }

    private IEnumerable<Refueling>? _refueling;

    void NewRefueling()
    {
        _NavigationManager.NavigateTo($"/refueling/{CarId}/new");
    }

    void GotoRefuelingDetails(int id)
    {
        _NavigationManager.NavigateTo($"/refueling/{id}");
    }

    protected override async Task OnInitializedAsync()
    {
        _refueling = await _RefuelingService.GetAllRefuelingsAsync(CarId);
    }
}
